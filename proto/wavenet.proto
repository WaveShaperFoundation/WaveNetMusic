syntax = "proto3";

package wavenet;

service Authentication {
    rpc Login(LoginRequest) returns (LoginResponse);
    rpc Register(RegisterRequest) returns (RegisterResponse);
}

service Library {
    rpc GetAlbums(Empty) returns (GetAlbumsResponse);
    rpc GetAlbum(GetAlbumRequest) returns (AlbumDetails);
    rpc GetTracks(Empty) returns (GetTracksResponse);
    rpc GetAlbumTracks(GetAlbumRequest) returns (GetTracksResponse);
    rpc GetTrack(GetTrackRequest) returns (Track);
    rpc GetArtists(Empty) returns (GetArtistsResponse);
    rpc GetArtist(GetArtistRequest) returns (ArtistWithAlbums);
    rpc IndexLibrary(Empty) returns (Empty);
    rpc SearchQuery(SearchQueryRequest) returns (SearchQueryResponse);
}


message SearchQueryRequest {
    string query = 1;
}

message SearchQueryResponse {
    repeated Track tracks = 2;
}

message GetAlbumsResponse {
    repeated Album albums = 1;
}

message GetAlbumRequest {
    int32 id = 1;
}

message GetTrackRequest {
    int32 id = 1;
}

message GetArtistRequest {
    int32 id = 1;
}

message GetArtistsResponse {
    repeated Artist artists = 1;
}


message GetTracksResponse {
    repeated Track tracks = 1;
}

message Empty {

}

message Artist {
    int32 id = 1;
    string name = 2;
}

message ArtistWithAlbums {
    Artist artist = 1;
    repeated Album albums = 2;
}

message Album {
    int32 id = 1;
    string name = 2;
    repeated Artist artists = 3;
    int32 year = 4;
    string blurhash = 5;
}

message AlbumDetails {
    int32 id = 1;
    string name = 2;
    repeated Artist artists = 3;
    int32 year = 4;
    string blurhash = 5;
    repeated AlbumTrack tracks = 6;
}

message AlbumTrack {
    int32 id = 1;
    string name = 2;
    repeated Artist artists = 3;
    int32 year = 4;
    int32 length = 5;
}

message Track{
    int32 id = 1;
    string name = 2;
    Album album = 3;
    repeated Artist artists = 4;
    int32 year = 5;
    int32 length = 6;
}

message LoginRequest {
    string username = 1;
    string password = 2;
}

message LoginResponse {
    optional string token = 1;
    int32 status = 2;
}

message RegisterRequest {
    string username = 1;
    string password = 2;
    string email = 3;
    string publicName = 4;
}


message RegisterResponse {
   int32 status = 1;
   optional string token = 2;
}

service Playlist {
    rpc GetMyPlaylists(Empty) returns (GetPlaylistsResponse);
    rpc GetPlaylist(GetPlaylistRequest) returns (PlaylistDetails);
    rpc CreatePlaylist(CreatePlaylistRequest) returns (CreatePlaylistResponse);
    rpc DeletePlaylist(DeletePlaylistRequest) returns (DeletePlaylistResponse);
    rpc ChangePlaylist(ChangePlaylistRequest) returns (ChangePlaylistResponse);
    rpc AddTrackToPlaylist(AddTrackToPlaylistRequest) returns (AddTrackToPlaylistResponse);
    rpc MoveTrackInPlaylist(MoveTrackInPlaylistRequest) returns (MoveTrackInPlaylistResponse);
    rpc RemoveTrackFromPlaylist(RemoveTrackFromPlaylistRequest) returns (RemoveTrackFromPlaylistResponse);
}

service LikedTracks {
    rpc GetLikedSongs(Empty) returns (GetTracksResponse);
    rpc LikeTrack(AddTrackToLikedRequest) returns (AddTrackToLikedResponse);
    rpc UnlikeTrack(RemoveTrackFromLikedRequest) returns (RemoveTrackFromLikedResponse);
}

message AddTrackToLikedRequest {
    int32 trackId = 1;
}

message AddTrackToLikedResponse {
    ActionResponse status = 1;
    int32 likedId = 2;
}

message RemoveTrackFromLikedRequest {
    int32 likedId = 1;
}

message RemoveTrackFromLikedResponse {
    ActionResponse status = 1;
}

message ActionResponse {
    enum Status {
        OK = 0;
        ERROR = 1;
    }
    Status status = 1;
    optional string message = 2;
}

message GetPlaylistRequest {
    int32 id = 1;
}

message GetPlaylistsResponse {
    repeated PlaylistResponse playlists = 1;
}

message CreatePlaylistRequest {
    string title = 1;
    string description = 2;
}

message ChangePlaylistResponse {
    ActionResponse status = 1;
}

message AddTrackToPlaylistRequest {
    int32 playlistId = 1;
    int32 trackId = 2;
}

message AddTrackToPlaylistResponse {
    ActionResponse status = 1;
    int32 addedTrackId = 2;
}

message MoveTrackInPlaylistRequest {
    int32 playlistTrackId = 1;
    int32 afterPlaylistTrackId = 2;
}

message MoveTrackInPlaylistResponse {
    ActionResponse status = 1;
}

message RemoveTrackFromPlaylistRequest {
    int32 playlistTrackId = 1;
}

message RemoveTrackFromPlaylistResponse {
    ActionResponse status = 1;
}

message CreatePlaylistResponse {
    ActionResponse status = 1;
    int32 id = 2;
}

message DeletePlaylistRequest {
    int32 id = 1;
}

message DeletePlaylistResponse {
    ActionResponse status = 1;
}

message ChangePlaylistRequest {
    int32 id = 1;
    optional string title = 2;
    optional string description = 3;
}

message PlaylistResponse {
    int32 id = 1;
    string title = 2;
    optional string description = 3;
    optional string coverSource = 4;
    int64 createdAt = 5;
}

message PlaylistDetails {
    int32 id = 1;
    string title = 2;
    string description = 3;
    string coverSource = 4;
    int32 createdAt = 5;
    repeated PlaylistTrack tracks = 6;
}

message PlaylistTrack {
    int32 id = 1;
    Track track = 2;
    int32 addedBy = 3;
    int32 addedAt = 4;
    int32 position = 5;
}