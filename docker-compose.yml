services:
  postgres:
    container_name: wave-postgres
    image: postgres:latest
    networks:
      - wavenet
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=waveywaveysql
      - POSTGRES_PASSWORD=FtEn5W83nd7MUxElPjJAK8
      - POSTGRES_DB=wavenet
    volumes:
      - database:/var/lib/postgres
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "wavenet" ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s

  meilisearch:
    container_name: wave-meilisearch
    image: getmeili/meilisearch:v1.9
    environment:
      - http_proxy
      - https_proxy
      - MEILI_MASTER_KEY=WaveySearchMeili
      - MEILI_NO_ANALYTICS=${MEILI_NO_ANALYTICS:-true}
      - MEILI_ENV=${MEILI_ENV:-development}
      - MEILI_LOG_LEVEL
      - MEILI_DB_PATH=/data.ms
    ports:
      - 7700:7700
    networks:
      - wavenet
    volumes:
      - meilisearch:/data.ms
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:7700" ]
      interval: 10s
      timeout: 5s
      retries: 5

  wavenet:
    container_name: wave-net-server
    networks:
      - wavenet
    depends_on:
      - postgres
      - meilisearch
    environment:
      - POSTGRES_URL=postgres://waveywaveysql:FtEn5W83nd7MUxElPjJAK8@postgres/wavenet
      - MEILISEARCH_API_URL=http://meilisearch:7000
      - MEILISEARCH_API_KEY=WaveySearchMeili
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - /mnt/nasdrive/NASDrive/Tidal RIP/Album:/library
      - cache:/cache

  caddy:
    container_name: wave-caddy
    image: caddy
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
    networks:
      - wavenet
    depends_on:
      - wavenet
    cap_add:
      - NET_ADMIN
    ports:
      - 80:80
      - 443:443
      - 50051:50051
      - 3000:3000
volumes:
  database:
    name: wavenet-database-storage
  meilisearch:
    name: wavenet-meilisearch-storage
  cache:
    name: wavenet-cache-storage

networks:
  wavenet: